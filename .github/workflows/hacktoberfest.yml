name: "Hacktoberfest"
on:
  issues:
    types:
      - opened
      - reopened

jobs:
  labeling:
    name: Issue Labeling
    runs-on: ubuntu-latest
    steps:
    - uses: actions-ecosystem/action-regex-match@v2
      id: quality-aliases
      with:
        text: ${{ github.event.issue.body }}
        regex: '^### Quality Areas\s*^.*Aliases.*$'
        flags: gm
    - uses: actions-ecosystem/action-add-labels@v1
      if: ${{ steps.quality-aliases.outputs.match != '' }}
      with:
        labels: |
          quality-aliases
    - uses: actions-ecosystem/action-regex-match@v2
      id: quality-formatting-code-samples
      with:
        text: ${{ github.event.issue.body }}
        regex: '^### Quality Areas\s*^.*Formatting code samples.*$'
        flags: gm
    - uses: actions-ecosystem/action-add-labels@v1
      if: ${{ steps.quality-formatting-code-samples.outputs.match != '' }}
      with:
        labels: |
          quality-formatting-code-samples
    - uses: actions-ecosystem/action-regex-match@v2
      id: quality-formatting-command-syntax
      with:
        text: ${{ github.event.issue.body }}
        regex: '^### Quality Areas\s*^.*Formatting command syntax.*$'
        flags: gm
    - uses: actions-ecosystem/action-add-labels@v1
      if: ${{ steps.quality-formatting-command-syntax.outputs.match != '' }}
      with:
        labels: |
          quality-formatting-command-syntax
    - uses: actions-ecosystem/action-regex-match@v2
      id: quality-link-references
      with:
        text: ${{ github.event.issue.body }}
        regex: '^### Quality Areas\s*^.*Link references.*$'
        flags: gm
    - uses: actions-ecosystem/action-add-labels@v1
      if: ${{ steps.quality-link-references.outputs.match != '' }}
      with:
        labels: |
          quality-link-references
    - uses: actions-ecosystem/action-regex-match@v2
      id: quality-markdown-linting
      with:
        text: ${{ github.event.issue.body }}
        regex: '^### Quality Areas\s*^.*Markdown linting.*$'
        flags: gm
    - uses: actions-ecosystem/action-add-labels@v1
      if: ${{ steps.quality-markdown-linting.outputs.match != '' }}
      with:
        labels: |
          quality-markdown-linting
    - uses: actions-ecosystem/action-regex-match@v2
      id: quality-spelling
      with:
        text: ${{ github.event.issue.body }}
        regex: '^### Quality Areas\s*^.*Spelling.*$'
        flags: gm
    - uses: actions-ecosystem/action-add-labels@v1
      if: ${{ steps.quality-spelling.outputs.match != '' }}
      with:
        labels: |
          quality-spelling
